@layer reset, base, default, helpers, utils;

@layer reset {
	button {
		all: unset;
	}
	*,
	*::after,
	*::before {
		box-sizing: border-box;
	}
	* {
		padding: 0;
		margin: 0;
	}
	body {
		line-height: 1;
	}
	p,
	h1,
	h2,
	h3,
	h4,
	h5,
	h6 {
		text-wrap: balance;
		overflow-wrap: break-word;
	}
	img,
	picture {
		display: block;
		max-width: 100%;
		height: auto;
	}
	ul,
	ol {
		list-style: none;
	}
	a {
		color: inherit;

		&:hover {
			text-decoration: none;
		}
	}
	table {
		border-collapse: collapse;
	}
	th {
		text-align: start;
	}
	fieldset {
		border: none;
	}
	input,
	button,
	textarea,
	select {
		font: inherit;
	}
	button {
		display: revert;
		outline: revert;
		cursor: pointer;

		color: inherit;

		/* text is no wrap! */
		white-space: nowrap;
		word-break: break-word;
	}
	label {
		display: block;
	}
	textarea {
		field-size: content;
		resize: vertical;
	}
	small {
		font-size: inherit;
	}
}

@layer base {
	:root {
		--max-lightness: 90%;
		--lightness-step: 10%;
		--color-primary-hue: 30; /* orange */
		--color-primary-saturation: 100%;
		--color-primary-90: var(--color-primary-hue) var(--color-primary-saturation)
			calc(var(--max-lightness) - var(--lightness-step) * 0);
		--color-primary-80: var(--color-primary-hue) var(--color-primary-saturation)
			calc(var(--max-lightness) - var(--lightness-step) * 1);
		--color-primary-70: var(--color-primary-hue) var(--color-primary-saturation)
			calc(var(--max-lightness) - var(--lightness-step) * 2);
		--color-primary-60: var(--color-primary-hue) var(--color-primary-saturation)
			calc(var(--max-lightness) - var(--lightness-step) * 3);
		--color-primary-50: var(--color-primary-hue) var(--color-primary-saturation)
			calc(var(--max-lightness) - var(--lightness-step) * 4);
		--color-primary-40: var(--color-primary-hue) var(--color-primary-saturation)
			calc(var(--max-lightness) - var(--lightness-step) * 5);
		--color-primary-30: var(--color-primary-hue) var(--color-primary-saturation)
			calc(var(--max-lightness) - var(--lightness-step) * 6);
		--color-primary-20: var(--color-primary-hue) var(--color-primary-saturation)
			calc(var(--max-lightness) - var(--lightness-step) * 7);
		--color-primary-10: var(--color-primary-hue) var(--color-primary-saturation)
			calc(var(--max-lightness) - var(--lightness-step) * 8);

		/* bg settings */
		--bg-primary-hsl: var(--color-primary-20);
		--bg-primary: hsl(var(--bg-primary-hsl));
		--bg-secondary-hsl: var(--color-primary-80);
		--bg-secondary: hsl(var(--bg-secondary-hsl));

		/* text settings */
		--text-primary-hsl: var(--color-primary-80);
		--text-primary: hsl(var(--text-primary-hsl));
		--text-secondary-hsl: var(--color-primary-20);
		--text-secondary: hsl(var(--text-secondary-hsl));

		--accent-primary-hsl: var(--color-primary-70);
		--accent-primary: hsl(var(--accent-primary-hsl));
		--accent-secondary-hsl: var(--color-primary-30);
		--accent-secondary: hsl(var(--accent-secondary-hsl));

		--text-sm: 1.4rem;
		--text-md: 1.7rem;
		--text-lg: 2rem;

		--shift-size-sm: 1rem;

		--table-border-color: var(--accent-secondary);

		--input-text-field-color-hsl: var(--bg-primary-hsl);
		--input-text-text-color: var(--color-primary-10);

		--divider-color: var(--accent-secondary);

		--link-primary: var(--accent-primary);
		--link-secondary: var(--accent-secondary);

		--form-space: 1.3rem;
	}
	html {
		accent-color: var(--accent-secondary);
	}
	em {
		font-style: normal;
		font-weight: bold;
	}
	fieldset[disabled] {
		& button,
		input,
		textarea,
		select {
			filter: grayscale(80%);
		}
	}
}

@layer default {
	body {
		font-family: Calibri, sans-serif;
		font-size: var(--text-sm);
	}
	h1 {
		font-size: var(--text-lg);
	}
	h2 {
		font-weight: normal;
		font-size: var(--text-md);
	}
	main h1,
	main h2 {
		margin-block-end: 0.5em;
	}
	section + section {
		margin-block: 2rem;
	}
	fieldset {
		border: none;

		& > *:not(legend) {
			margin-inline-start: var(--shift-size-sm);
		}
	}
	legend {
		font-size: var(--text-md);
		margin-block-end: var(--form-space);
	}
	label {
		margin-block-end: var(--form-space);
	}
	table {
		border: 1px solid var(--table-border-color);
	}
	th,
	td {
		border: 1px solid var(--table-border-color);
		padding: 0.8em 0.8em;
	}
	input[type='text'] {
		border: none;
		color: var(--input-text-text-color);
		border-bottom: 3px dotted hsl(var(--input-text-field-color-hsl));
		background-color: hsl(var(--input-text-field-color-hsl) / 20%);
		padding-block: 0.5em 0.3em;
		padding-inline: 0.6em;

		&:focus {
			outline: none;
		}
	}
	small {
		font-size: calc(var(--text-sm) * 0.7);
	}
	hr {
		border: none;
	}
}

@layer helpers {
	.sr-only {
		position: absolute;
		width: 1px;
		height: 1px;
		padding: 0;
		margin: -1px;
		overflow: hidden;
		clip: rect(0, 0, 0, 0);
		white-space: nowrap;
		border-width: 0;
	}
}

@layer utils {
	.border-rounded {
		border-radius: 999px;
	}
	@scope (.text-bg-primary) {
		:scope {
			color: var(--text-primary);
			background-color: var(--bg-primary);

			a {
				color: var(--link-primary);
			}
		}
	}
	@scope (.text-bg-secondary) {
		:scope {
			color: var(--text-secondary);
			background-color: var(--bg-secondary);
	
			a {
				color: var(--link-secondary);
			}
		}
	}
	.text-overflow-ellipsis {
		white-space: nowrap;
		overflow: clip;
		text-overflow: ellipsis;
	}
	.label-text {
		display: block;
		margin-block-end: 0.2em;
		font-weight: bold;
	}
}

@layer component {
	.primary-btn {
		/* layout */
		border-radius: 0.375rem;
		padding: 0.5rem 1.25rem;

		/* color */
		color: var(--text-primary);
		background-color: hsl(var(--bg-primary-hsl) / 85%);
		box-shadow: 0px 0 5px 4px hsl(var(--accent-secondary-hsl) / 40%);

		text-transform: uppercase;

		&:hover {
			opacity: 0.9;
		}

		&:active {
			animation: 300ms push ease-in-out;
		}
	}
	hr.divider-inline-sm {
		height: 100%;
		margin-inline: 5vw;
		border-inline-start: 0.3px solid var(--divider-color);
	}
}

@keyframes push {
	50% {
		scale: 0.95;
	}
}
